version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: buildboard-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: buildboard_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - buildboard-network

  # BuildBoard backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: buildboard-api
    ports:
      - "8080:8080"
    environment:
      # Environment
      ENVIRONMENT: development

      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: buildboard_db
      DB_SSL_MODE: disable

      # Server
      PORT: 8080
      GIN_MODE: debug
      FRONTEND_URL: http://localhost:3000
      BACKEND_URL: http://localhost:8080

      # Email (optional - set these to enable)
      # SMTP_HOST: smtp.gmail.com
      # SMTP_PORT: 587
      # SMTP_USERNAME: your-email@gmail.com
      # SMTP_PASSWORD: your-app-password
      # FROM_EMAIL: your-email@gmail.com
      # FROM_NAME: BuildBoard
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - buildboard-network
    restart: unless-stopped

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: buildboard-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - buildboard-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  buildboard-network:
    driver: bridge